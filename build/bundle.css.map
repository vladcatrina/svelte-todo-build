{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Calendar.svelte",
    "DayNightToggle.svelte",
    "SearchForm.svelte",
    "SkillAdder.svelte",
    "SkillModal.svelte",
    "TimeInput.svelte",
    "TodoAdder.svelte",
    "TodoEditor.svelte",
    "TodoList.svelte",
    "TodoSecondaryFields.svelte",
    "XpBar.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import SkillModal from \"./SkillModal.svelte\";\n  import { onMount } from \"svelte\";\n  import { language } from \"./stores/language\";\n  import { display } from \"./stores/display\";\n  import { notifications } from \"./stores/notifications\";\n  import TodoList from \"./TodoList.svelte\";\n  import DataSaver from \"./DataSaver.svelte\";\n  import Notifications from \"./Notifications.svelte\";\n  import SearchForm from \"./SearchForm.svelte\";\n  import DayNightToggle from \"./DayNightToggle.svelte\";\n  import XpBar from \"./XpBar.svelte\";\n  import { loc } from \"./stores/loc\";\n\n  onMount(() => {\n    document.title = \"RPG Todo\";\n  });\n\n  function createFilterForTodoList(d, index) {\n    let filter;\n    let filterComplete = (item) => d.viewCompleted || !item.completed;\n    let filterSearch = (item) => item.content.includes(d.searchString);\n\n    if (d.separateDisplay) {\n      if (d.questsFirst) {\n        filter = (item) => filterComplete(item) && item.type === index;\n      } else {\n        filter = (item) => filterComplete(item) && item.type !== index;\n      }\n    } else {\n      filter = (item) => filterComplete(item);\n    }\n\n    return (item) => filter(item) && filterSearch(item);\n  }\n</script>\n\n<style>\n  .container {\n    position: relative;\n    width: 50%;\n    margin: auto;\n  }\n</style>\n\n<div id=\"app\" class={`${$display.nightMode ? 'night' : 'day'}`}>\n  <DataSaver />\n  <div class=\"container\">\n    <SearchForm />\n\n    <div class=\"menu\">\n      <div class=\"dropdown\">\n        <button> üìß Notifications {#if $notifications.length > 0}<b>!</b>{/if} </button>\n        <div class=\"notifications dropdown-content\">\n          <Notifications />\n        </div>\n      </div>\n\n      <div class=\"dropdown\">\n        <button>üîß Options</button>\n        <div class=\"dropdown-content\">\n          {#if $display.separateDisplay}\n            <a on:click={display.setMixedDisplay}>{$loc['viewMixed']}</a>\n          {:else}\n            <a on:click={display.setSeparateDisplay}>{$loc['viewSeparate']}</a>\n          {/if}\n          <a on:click={display.toggleViewCompleted}>\n            {$display.viewCompleted ? $loc['hideCompleted'] : $loc['viewCompleted']}\n          </a>\n\n          <a on:click={language.toggle}>\n            {$language === 'ro' ? 'English' : 'rom√¢nƒÉ'}\n          </a>\n        </div>\n      </div>\n\n      <button on:click={display.toggleModal}>üé∏ {$loc['skills']}</button>\n\n      <DayNightToggle\n        nightMode={$display.nightMode}\n        toggleNightMode={display.toggleNightMode} />\n    </div>\n\n    <XpBar />\n\n    {#if !$display.separateDisplay}\n      <TodoList\n        todoListIndex={0}\n        filter={createFilterForTodoList($display, 0)} />\n    {:else}\n      <TodoList\n        todoListIndex={0}\n        filter={createFilterForTodoList($display, 0)} />\n      <TodoList\n        todoListIndex={1}\n        filter={createFilterForTodoList($display, 1)} />\n    {/if}\n    <SkillModal\n      open={$display.modalOpen}\n      toggleSkillModal={display.toggleModal} />\n  </div>\n</div>\n",
    "<script>\r\n  export let value;\r\n  export let closeCalendar;\r\n  export let date = new Date();\r\n\r\n  const MONTHS = [\r\n    \"jan\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"apr\",\r\n    \"may\",\r\n    \"jun\",\r\n    \"jul\",\r\n    \"aug\",\r\n    \"sep\",\r\n    \"oct\",\r\n    \"nov\",\r\n    \"dec\",\r\n  ];\r\n\r\n  const DAYS = [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"];\r\n\r\n  let month;\r\n  let year;\r\n\r\n  const DAY_LENGTH = 86400000;\r\n\r\n  function createDays(date) {\r\n    let newArr = new Array([], [], [], [], [], []);\r\n    let now = new Date(date);\r\n\r\n    now.setDate(1); //first day of month\r\n    const day = now.getDay();\r\n\r\n    now = now - day * DAY_LENGTH;\r\n\r\n    for (let i = 0; i < 42; i++) {\r\n      newArr[Math.floor(i / 7)][i % 7] = new Date(now);\r\n      now += DAY_LENGTH;\r\n    }\r\n\r\n    return newArr;\r\n  }\r\n\r\n  let dateArray;\r\n\r\n  function updateDate(date) {\r\n    month = date.getMonth();\r\n    year = date.getFullYear();\r\n\r\n    dateArray = createDays(date);\r\n  }\r\n\r\n  function selectDate(date) {\r\n    value = date;\r\n    closeCalendar();\r\n  }\r\n\r\n  function previousMonth() {\r\n    date.setMonth(date.getMonth() - 1);\r\n    updateDate(date);\r\n  }\r\n\r\n  function nextMonth() {\r\n    date.setMonth(date.getMonth() + 1);\r\n    updateDate(date);\r\n  }\r\n\r\n  updateDate(date);\r\n</script>\r\n\r\n<style>\r\n  .current-month {\r\n    font-weight: bold;\r\n  }\r\n  td {\r\n    text-align: center;\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n\r\n<div class=\"calendar\">\r\n  <div class=\"header\">\r\n    <button on:click|preventDefault={previousMonth}>&lt;</button>\r\n    <b>{MONTHS[month]} {year}</b>\r\n    <button on:click|preventDefault={nextMonth}>&gt;</button>\r\n  </div>\r\n  <table>\r\n    <tr>\r\n      {#each DAYS as day}\r\n        <th>{day}</th>\r\n      {/each}\r\n    </tr>\r\n    {#each dateArray as week}\r\n      <tr>\r\n        {#each week as date}\r\n          <td\r\n            on:click={() => selectDate(date)}\r\n            class={`${date.getMonth() === month ? 'current-month' : ''} ${date.getDate() === new Date().getDate() && date.getMonth() === new Date().getMonth() ? 'today' : ''}`}>\r\n            {date.getDate()}\r\n          </td>\r\n        {/each}\r\n      </tr>\r\n    {/each}\r\n  </table>\r\n</div>\r\n",
    "<script>\r\n  export let nightMode;\r\n  export let toggleNightMode;\r\n</script>\r\n\r\n<style>\r\n  .day-night-toggle {\r\n    position: absolute;\r\n    font-weight: bold;\r\n    font-family: \"Courier New\", Courier, monospace;\r\n    font-size: 16px;\r\n    width: 80px;\r\n    height: 40px;\r\n    cursor: pointer;\r\n    top: 12px;\r\n    right: 0;\r\n  }\r\n\r\n  span {\r\n    z-index: 1;\r\n  }\r\n\r\n  .switch {\r\n    position: absolute;\r\n    border-radius: 100%;\r\n    height: 16px;\r\n    width: 16px;\r\n    background-color: black;\r\n    left: 0px;\r\n    top: -5px;\r\n  }\r\n\r\n  .slider {\r\n    position: absolute;\r\n    height: 8px;\r\n    width: 34px;\r\n    left: 22px;\r\n    top: 7px;\r\n    border-radius: 10px;\r\n    z-index: 0;\r\n    background-color: white;\r\n  }\r\n\r\n  .switch.on {\r\n    left: auto;\r\n    right: 0px;\r\n  }\r\n\r\n  .sun {\r\n    position: absolute;\r\n    left: 0;\r\n  }\r\n\r\n  .moon {\r\n    position: absolute;\r\n    right: 0;\r\n  }\r\n</style>\r\n\r\n<div class=\"day-night-toggle\" on:click={toggleNightMode}>\r\n  <span class=\"sun\">‚òÄÔ∏è</span>\r\n  <span class=\"slider\">\r\n    <span class={`switch ${nightMode ? 'on' : 'off'}`}>&nbsp;</span>\r\n  </span>\r\n  <span class=\"moon\">üåë</span>\r\n</div>\r\n",
    "<script>\r\n  import { display } from \"./stores/display\";\r\n  import { loc } from \"./stores/loc\";\r\n\r\n  let filterInput = $display.searchString;\r\n  function handleFilterSubmit() {\r\n    display.listSearchResults(filterInput);\r\n  }\r\n\r\n  function reset() {\r\n    filterInput = \"\";\r\n    handleFilterSubmit();\r\n  }\r\n</script>\r\n\r\n<style>\r\n  form {\r\n    position: relative;\r\n    display: block;\r\n    width: fit-content;\r\n  }\r\n  input {\r\n    transition: width 1s;\r\n    width: 36px;\r\n  }\r\n  input:focus,\r\n  .active {\r\n    transition: width 1s;\r\n    width: 128px;\r\n  }\r\n  #submit {\r\n    display: none;\r\n  }\r\n  #submit.displayed {\r\n    display: inline;\r\n  }\r\n  #clear {\r\n    font-weight: bold;\r\n    position: absolute;\r\n    left: -20px;\r\n    top: 6px;\r\n    visibility: hidden;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    margin: 0 6px;\r\n  }\r\n  #clear.visible {\r\n    visibility: visible;\r\n  }\r\n</style>\r\n\r\n<form on:submit|preventDefault={handleFilterSubmit}>\r\n  <input\r\n    bind:value={filterInput}\r\n    placeholder={\"üîç\"}\r\n    class={filterInput !== '' ? 'active' : ''} />\r\n\r\n  <button id=\"submit\" type=\"submit\" class={filterInput !== $display.searchString ? \"displayed\" : \"\"}>{$loc['submit']}</button>\r\n  <a\r\n    id=\"clear\"\r\n    class={filterInput !== '' ? 'visible' : ''}\r\n    on:click={reset}>√ó</a>\r\n</form>\r\n",
    "<script>\r\n  import { loc } from \"./stores/loc\";\r\n  import { skillList } from \"./stores/skillList\";\r\n\r\n  let inputName = \"\";\r\n  let inputRef;\r\n\r\n  function handleAdd() {\r\n    inputRef.focus();\r\n    if (inputName === \"\") {\r\n      return;\r\n    }\r\n    skillList.add({ name: inputName });\r\n    inputName = \"\";\r\n  }\r\n</script>\r\n\r\n<style>\r\n  form {\r\n    display: flex;\r\n  }\r\n  input {\r\n    width: 100%;\r\n  }\r\n</style>\r\n\r\n<form on:submit|preventDefault={handleAdd}>\r\n  <input\r\n    bind:value={inputName}\r\n    bind:this={inputRef}\r\n    placeholder={$loc['name']} />\r\n  <button type=\"submit\">{$loc['add']}</button>\r\n</form>\r\n",
    "<script>\r\n  import SkillList from \"./SkillList.svelte\";\r\n\r\n  export let open;\r\n  export let toggleSkillModal;\r\n</script>\r\n\r\n<style>\r\n  .modal-bg {\r\n    position: fixed;\r\n    z-index: 1;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n\r\n  .modal {\r\n    position: absolute;\r\n    width: 40%;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    margin: 1% auto;\r\n    z-index: 2;\r\n  }\r\n\r\n  .modal-content {\r\n    padding: 12px;\r\n    height: 100%;\r\n  }\r\n\r\n  #close-button {\r\n    float: right;\r\n  }\r\n</style>\r\n\r\n{#if open}\r\n  <div class=\"modal-bg\" on:click={toggleSkillModal}>\r\n    <div class=\"modal\" on:click={(e) => e.stopPropagation()}>\r\n      <button id=\"close-button\" on:click={toggleSkillModal}>√ó</button>\r\n      <div class=\"modal-content\">\r\n        <SkillList />\r\n      </div>\r\n    </div>\r\n  </div>\r\n{/if}\r\n",
    "<script>\r\n  import Calendar from \"./Calendar.svelte\";\r\n\r\n  export let value; //timeLimit\r\n  export let startDate;\r\n  let dateValue = new Date(new Date(startDate).valueOf() + value);\r\n  let calendarOpen = false;\r\n  let calendarValue = new Date(dateValue);\r\n\r\n  function openCalendar() {\r\n    calendarOpen = true;\r\n    document.addEventListener(\"click\", closeCalendar);\r\n  }\r\n\r\n  function closeCalendar() {\r\n    calendarOpen = false;\r\n    document.removeEventListener(\"click\", closeCalendar, true);\r\n  }\r\n\r\n  let hours = dateValue.getHours();\r\n  let minutes = dateValue.getMinutes();\r\n\r\n  if (parseInt(hours) < 10) {\r\n    hours = `0${hours}`;\r\n  }\r\n  if (parseInt(minutes) < 10) {\r\n    minutes = `0${minutes}`;\r\n  }\r\n  $: {\r\n    dateValue = new Date(calendarValue);\r\n    dateValue.setHours(hours);\r\n    dateValue.setMinutes(minutes);\r\n\r\n    value = dateValue - startDate;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .time-input-container {\r\n    position: relative;\r\n  }\r\n\r\n  .open {\r\n    display: block;\r\n    position: absolute;\r\n    top: 40px;\r\n    margin: auto;\r\n    z-index: 2;\r\n    background-color: #efefef;\r\n  }\r\n\r\n  .closed {\r\n    display: none;\r\n  }\r\n\r\n  input {\r\n    width: 32px;\r\n  }\r\n\r\n  .hour-inputs {\r\n    display: inline-block;\r\n  }\r\n</style>\r\n\r\n<span class={`time-input-container`}>\r\n  {new Intl.DateTimeFormat('en-US').format(calendarValue)}\r\n\r\n  <div class=\"hour-inputs\">\r\n    <button id=\"calendar-button\"\r\n      on:click|stopPropagation|preventDefault={calendarOpen ? closeCalendar : openCalendar}>Calendar</button>\r\n    <div\r\n      on:click|stopPropagation\r\n      class={`calendar-box ${calendarOpen ? 'open' : 'closed'}`}>\r\n      <Calendar bind:value={calendarValue} {closeCalendar} />\r\n    </div>\r\n    <input bind:value={hours} maxlength=\"2\" />\r\n    :\r\n    <input bind:value={minutes} maxlength=\"2\" />\r\n  </div>\r\n</span>\r\n",
    "<script>\r\n  import { todoList } from \"./stores/todoList\";\r\n  import { loc } from \"./stores/loc\";\r\n  import TodoTypeSelect from \"./TodoTypeSelect.svelte\";\r\n\r\n  let inputContent = \"\";\r\n  let inputRef;\r\n  let inputType;\r\n\r\n  export let todoListIndex;\r\n\r\n  const handleAdd = () => {\r\n    inputRef.focus();\r\n    if (inputContent === \"\") {\r\n      // alert(\"Todo content empty!\"); //change later\r\n      return;\r\n    }\r\n\r\n    todoList.add({\r\n      content: inputContent,\r\n      date: new Date(),\r\n      type: inputType,\r\n    });\r\n    inputContent = \"\";\r\n  };\r\n</script>\r\n\r\n<style>\r\n  form {\r\n    display: flex;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n  }\r\n</style>\r\n\r\n<form on:submit|preventDefault={handleAdd}>\r\n  <input bind:value={inputContent} bind:this={inputRef} placeholder={$loc['content']} />&nbsp;\r\n    <TodoTypeSelect bind:value={inputType} {todoListIndex}/>&nbsp;\r\n  <button type=\"submit\">{$loc['add']}</button>\r\n</form>\r\n",
    "<script>\r\n  import { loc } from \"./stores/loc\";\r\n  import { onMount } from \"svelte\";\r\n  import { isNumber } from \"./helpers\";\r\n  import TodoTypeSelect from \"./TodoTypeSelect.svelte\";\r\n  import TodoSecondaryFields from \"./TodoSecondaryFields.svelte\";\r\nimport { prevent_default } from \"svelte/internal\";\r\n\r\n  export let initialItem;\r\n  export let handleTodoEditSave;\r\n  export let index;\r\n\r\n  let editedItem = { ...initialItem };\r\n  let inputRef;\r\n\r\n  onMount(() => {\r\n    inputRef.focus();\r\n  });\r\n\r\n  function validate(item) {\r\n    //MOVE & EXPAND IF NEEDED\r\n    if (!isNumber(item.xpReward)) {\r\n      alert(\"XP REWARD NOT A NUMBER\");\r\n      return false;\r\n    }\r\n    if (!isNumber(item.timeLimit)) {\r\n      alert(\"TIME LIMIT NOT A NUMBER\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function handleSubmit() {\r\n    if (validate(editedItem)) {\r\n      handleTodoEditSave(index, editedItem);\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  input {\r\n    width: 100%;\r\n  }\r\n</style>\r\n\r\n<form on:submit|preventDefault={handleSubmit}>\r\n  <div style=\"display: flex;\">\r\n    <input bind:value={editedItem.content} bind:this={inputRef} />\r\n    <TodoTypeSelect bind:value={editedItem.type} />\r\n    <button> {$loc['save']} </button>\r\n  </div>\r\n  <div>\r\n    <TodoSecondaryFields bind:editedItem />\r\n  </div>\r\n</form>\r\n",
    "<script>\r\n  import { language } from \"./stores/language\";\r\n  import TodoRemover from \"./TodoRemover.svelte\";\r\n  import TodoAdder from \"./TodoAdder.svelte\";\r\n  import TodoMover from \"./TodoMover.svelte\";\r\n  import TodoEditor from \"./TodoEditor.svelte\";\r\n  import { todoList } from \"./stores/todoList\";\r\n  import { time } from \"./stores/time\";\r\n  import { loc } from \"./stores/loc\";\r\n  import { deriveTodoListStore } from \"./stores/deriveTodoListStore\";\r\n  import { calculateAge, parseDate } from \"./helpers\";\r\n\r\n  export let todoListIndex;\r\n\r\n  export let filter;\r\n\r\n  let localStore;\r\n  $: localStore = deriveTodoListStore(filter);\r\n\r\n  let editingTodoIndex = -1;\r\n  let coloredItemIndex = -1;\r\n  let decolorTimeout;\r\n\r\n  function handleTodoEdit(index) {\r\n    editingTodoIndex = index;\r\n  }\r\n\r\n  function handleTodoEditSave(index, newItem) {\r\n    todoList.edit(index, newItem);\r\n    editingTodoIndex = -1;\r\n  }\r\n\r\n  function focusNewPos(newIndex) {\r\n    clearTimeout(decolorTimeout);\r\n    decolorTimeout = setTimeout(() => {\r\n      coloredItemIndex = -1;\r\n    }, 1000);\r\n    coloredItemIndex = newIndex;\r\n\r\n    editingTodoIndex = -1;\r\n  }\r\n\r\n  let checkedIndex = -1;\r\n  function handleCheck(index) {\r\n    checkedIndex = index;\r\n    setTimeout(() => {\r\n      try {\r\n        todoList.complete(index);\r\n      } catch (e) {\r\n        alert($loc[e] || e);\r\n      }\r\n      checkedIndex = -1;\r\n    }, 1500);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .inactive-todo {\r\n    transition: background-color 1s;\r\n  }\r\n\r\n  :global(.todo-right) {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    padding: 6px;\r\n  }\r\n\r\n  ul {\r\n    padding-left: 0;\r\n  }\r\n\r\n  li {\r\n    position: relative;\r\n    padding: 12px;\r\n    height: 32px;\r\n  }\r\n\r\n  li:first-child {\r\n    border-top-left-radius: inherit;\r\n  }\r\n\r\n  li.editing {\r\n    height: auto;\r\n  }\r\n\r\n  .content {\r\n    font-weight: bold;\r\n  }\r\n\r\n  abbr {\r\n    text-decoration: none;\r\n  }\r\n\r\n  .checked {\r\n    transition: all 1s;\r\n    height: 0;\r\n    padding: 0;\r\n    opacity: 0;\r\n  }\r\n\r\n  .expired {\r\n    opacity: 0.6;\r\n  }\r\n</style>\r\n\r\n<ul class=\"todo-list\">\r\n  {#if $localStore.length === 0}\r\n    <li>{$loc['addSomeTodos']}</li>\r\n  {/if}\r\n  {#each $localStore as item, index (item.sourceIndex)}\r\n    <li\r\n      class={`${item.sourceIndex === coloredItemIndex ? 'active-todo' : 'inactive-todo'} ${item.expired ? 'expired' : ''} ${item.sourceIndex === checkedIndex ? 'checked' : ''} ${item.sourceIndex === editingTodoIndex ? 'editing' : ''} ${item.type === 0 ? 'quest' : 'training'}`}\r\n      on:click={() => focusNewPos(item.sourceIndex)}>\r\n      {#if item.sourceIndex === editingTodoIndex}\r\n        <div on:click|stopPropagation class=\"todo-editor\">\r\n          <TodoEditor\r\n            {handleTodoEditSave}\r\n            index={item.sourceIndex}\r\n            initialItem={item} />\r\n        </div>\r\n      {:else}\r\n        <input\r\n          on:click|stopPropagation={() => handleCheck(item.sourceIndex)}\r\n          type=\"checkbox\"\r\n          checked={checkedIndex === item.sourceIndex || item.completed}\r\n          disabled={item.completed || item.expired} />\r\n\r\n        <span class=\"content\">\r\n          <b>{item.type === 0 ? '!' : '#'} </b>\r\n          <span\r\n            on:click|stopPropagation={() => handleTodoEdit(item.sourceIndex)}>\r\n            {item.content}\r\n          </span>\r\n        </span>\r\n        <div class=\"todo-right\">\r\n          <span class=\"todo-time\">\r\n            <abbr\r\n              title={parseDate(item.date)}>{calculateAge(item.date, $time)[$language]}</abbr>\r\n          </span>\r\n          <TodoMover\r\n            {focusNewPos}\r\n            index={item.sourceIndex}\r\n            {filter}\r\n            text=\"‚Üë\"\r\n            diff={-1} />\r\n          <TodoMover\r\n            {focusNewPos}\r\n            index={item.sourceIndex}\r\n            {filter}\r\n            text=\"‚Üì\"\r\n            diff={1} />\r\n          <TodoRemover index={item.sourceIndex} />\r\n        </div>\r\n      {/if}\r\n    </li>\r\n  {/each}\r\n  <li>\r\n    <TodoAdder {todoListIndex} />\r\n  </li>\r\n</ul>\r\n",
    "<script>\r\n  import { TODO_TYPES } from \"./constants\";\r\n  import { loc } from \"./stores/loc\";\r\n  import SkillSelect from \"./SkillSelect.svelte\";\r\n  import TimeInput from \"./TimeInput.svelte\";\r\n\r\n  export let editedItem;\r\n</script>\r\n\r\n<style>\r\n  table {\r\n    width: 100%;\r\n  }\r\n  \r\n  .right-column {\r\n    display: flex;\r\n  }\r\n\r\n  .right-column input {\r\n    width: 100%;\r\n  }\r\n</style>\r\n\r\n<table>\r\n  {#if TODO_TYPES[editedItem.type] === 'Quest'}\r\n    <tr>\r\n      <td>{$loc['skillRequirement']}</td>\r\n      <td>\r\n        <div class=\"right-column\">\r\n          <SkillSelect bind:value={editedItem.skillReq.skill} />\r\n          {#if editedItem.skillReq.skill !== -1}\r\n            <input bind:value={editedItem.skillReq.level} />\r\n          {/if}\r\n        </div>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>{$loc['xpReward']}</td>\r\n      <td>\r\n        <div class=\"right-column\">\r\n          <input bind:value={editedItem.xpReward} />\r\n          <div class=\"right-column\" />\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  {:else if TODO_TYPES[editedItem.type] === 'Training'}\r\n    <tr>\r\n      <td>{$loc['skillReward']}</td>\r\n      <td>\r\n        <div class=\"right-column\">\r\n          <SkillSelect bind:value={editedItem.skillReward.skill} />\r\n          {#if editedItem.skillReward.skill !== -1}\r\n            <input bind:value={editedItem.skillReward.level} />\r\n          {/if}\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  {/if}\r\n  <tr>\r\n    <td>{$loc['timeLimit']}</td>\r\n    <td>\r\n      <div class=\"right-column\">\r\n        <TimeInput\r\n          bind:value={editedItem.timeLimit}\r\n          startDate={new Date(editedItem.date)} />\r\n      </div>\r\n    </td>\r\n  </tr>\r\n</table>\r\n",
    "<script>\r\n  import { xp } from \"./stores/xp\";\r\n  const xpMax = 500;\r\n</script>\r\n\r\n<style>\r\n  .xp-bar-container {\r\n    opacity: 0.5;\r\n    transition: opacity 0.5s;\r\n  }\r\n\r\n  .xp-bar-container:hover {\r\n    opacity: 0.6;\r\n    transition: opacity 0.5s;\r\n  }\r\n\r\n  .xp-bar {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 12px;\r\n    background-color: white;\r\n    border-radius: 12px;\r\n    border: solid 0.2px #ccc;\r\n  }\r\n\r\n  .xp-fill {\r\n    position: absolute;\r\n    height: calc(100% - 2px);\r\n    left: 1px;\r\n    top: 1px;\r\n    background-color: brown;\r\n    border-radius: 12px;\r\n  }\r\n</style>\r\n\r\n<div class=\"xp-bar-container\">\r\n  <abbr title={`${$xp} XP`}>\r\n    <div class=\"xp-bar\">\r\n      <div\r\n        class=\"xp-fill\"\r\n        style={`width: calc(${Math.floor(($xp * 100) / xpMax)}% - 2px);`} />\r\n    </div>\r\n  </abbr>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "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"
}